{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-17T07:30:08.853Z",
    "end": "2021-10-17T07:30:09.493Z",
    "duration": 640,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "de9af5a8-54a0-435a-b4c6-7421dc997b07",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4848f464-5195-41c8-a5b6-84691a82c9f8",
          "title": "/GET detail",
          "fullFile": "/Users/agusyang/Stockbit-Backend-CodeTest/2.SmallExpressJsServer/test/detail_test.js",
          "file": "/test/detail_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should GET detail of movie",
              "fullTitle": "/GET detail it should GET detail of movie",
              "timedOut": false,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .get('/detail')\n    .query({ t: 'The Big Bang Theory'})\n    .end((err, res) => {\n      if (err) done(err)\n      expect(res).to.have.status(200);\n      expect(res.body.status).to.be.eq(200);\n      expect(res.body.message).to.be.eq('success');\n      expect(res.body.data).to.be.an('object');\n      done();\n    });",
              "err": {},
              "uuid": "91ed10c1-0830-4ca6-9324-3e10643d9c13",
              "parentUUID": "4848f464-5195-41c8-a5b6-84691a82c9f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should send error 400 if `i` or `t` query param not exist",
              "fullTitle": "/GET detail it should send error 400 if `i` or `t` query param not exist",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .get('/detail')\n    .query({ s: 'The Big Bang Theory'})\n    .end((err, res) => {\n      if (err) done(err)\n      expect(res).to.have.status(400);\n      expect(res.body.status).to.be.eq(400);\n      expect(res.body.message).to.be.eq(`At least one argument is required between 'i' or 't'`);\n      done();\n    });",
              "err": {},
              "uuid": "57c71285-87e9-40a5-82b9-b42b6c2c394c",
              "parentUUID": "4848f464-5195-41c8-a5b6-84691a82c9f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should send error 400 if query params is empty",
              "fullTitle": "/GET detail it should send error 400 if query params is empty",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n  .get('/detail')\n  .end((err, res) => {\n    if (err) done(err)\n    expect(res).to.have.status(400);\n    expect(res.body.status).to.be.eq(400);\n    done()\n  })",
              "err": {},
              "uuid": "2124b003-a224-4d84-86c7-519abefd73b4",
              "parentUUID": "4848f464-5195-41c8-a5b6-84691a82c9f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91ed10c1-0830-4ca6-9324-3e10643d9c13",
            "57c71285-87e9-40a5-82b9-b42b6c2c394c",
            "2124b003-a224-4d84-86c7-519abefd73b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ca6ba0d-09b8-4d43-80c8-f9de8de959f7",
          "title": "/GET search",
          "fullFile": "/Users/agusyang/Stockbit-Backend-CodeTest/2.SmallExpressJsServer/test/search_test.js",
          "file": "/test/search_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should GET list of movies",
              "fullTitle": "/GET search it should GET list of movies",
              "timedOut": false,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .get('/search')\n    .query({ s: 'Dragon Ball'})\n    .end((err, res) => {\n      if (err) done(err)\n      expect(res).to.have.status(200);\n      expect(res.body.status).to.be.eq(200);\n      expect(res.body.message).to.be.eq('success');\n      expect(res.body.data.searchData).to.be.an('array');\n      done();\n    });",
              "err": {},
              "uuid": "d19cb7ce-338d-48c0-9d1e-b51868dad0f1",
              "parentUUID": "4ca6ba0d-09b8-4d43-80c8-f9de8de959f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should send error 400 if `s` query param not exist",
              "fullTitle": "/GET search it should send error 400 if `s` query param not exist",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .get('/search')\n    .query({ t: 'Dragon Ball'})\n    .end((err, res) => {\n      if (err) done(err)\n      expect(res).to.have.status(400);\n      expect(res.body.status).to.be.eq(400);\n      expect(res.body.message).to.be.eq(`The 's' query param is required`);\n      done();\n    });",
              "err": {},
              "uuid": "6ca0f098-638a-435c-8569-a2d4349132c2",
              "parentUUID": "4ca6ba0d-09b8-4d43-80c8-f9de8de959f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should send error 400 if query params is empty",
              "fullTitle": "/GET search it should send error 400 if query params is empty",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n  .get('/search')\n  .end((err, res) => {\n    if (err) done(err)\n    expect(res).to.have.status(400);\n    expect(res.body.status).to.be.eq(400);\n    done()\n  })",
              "err": {},
              "uuid": "d23a39f9-3a5e-4cba-9ca2-f9cec88eff11",
              "parentUUID": "4ca6ba0d-09b8-4d43-80c8-f9de8de959f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d19cb7ce-338d-48c0-9d1e-b51868dad0f1",
            "6ca0f098-638a-435c-8569-a2d4349132c2",
            "d23a39f9-3a5e-4cba-9ca2-f9cec88eff11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}